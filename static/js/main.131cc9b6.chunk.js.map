{"version":3,"sources":["components/RangeForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RangeForm","onSubmit","defaultValues","useForm","register","handleSubmit","className","htmlFor","type","id","name","ref","WEEK_DAYS","map","wd","value","Info","weekdays","createState","start","end","accelerationDay","startDate","DateTime","fromISO","isValid","endDate","duration","diff","days","Array","from","length","_","i","plus","firstAccelerationDayOffset","findIndex","d","weekdayLong","Error","periods","Math","floor","index","console","error","DEFAULT_START","DEFAULT_END","DEFAULT_ACCELERATION_DAY","App","useState","baseState","setBaseState","prolongedPeriods","setProlongedPeriods","log","toLowerCase","style","width","title","toFormat","weekdayShort","slice","toMillis","paddingLeft","onClick","s","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.131cc9b6.chunk.js","sourcesContent":["import { Info } from \"luxon\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\ntype DateRange = { start: string; end: string; accelerationDay: string };\n\ninterface RangeFormProp {\n  defaultValues: DateRange;\n  onSubmit: (data: DateRange) => void;\n}\n\nexport const RangeForm = ({ onSubmit, defaultValues }: RangeFormProp) => {\n  const { register, handleSubmit } = useForm<DateRange>({ defaultValues });\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"RangeForm\">\n      <div className=\"RangeForm__fields\">\n        <label htmlFor=\"start\">Start Date: </label>\n        <input type=\"text\" id=\"start\" name=\"start\" ref={register} />\n      </div>\n      <div className=\"RangeForm__fields\">\n        <label htmlFor=\"end\">End Date: </label>\n        <input type=\"text\" id=\"end\" name=\"end\" ref={register} />\n      </div>\n      <div className=\"RangeForm__fields\">\n        <label htmlFor=\"accelerationDay\">Acc. day: </label>\n        <select id=\"accelerationDay\" name=\"accelerationDay\" ref={register}>\n          {WEEK_DAYS.map((wd) => (\n            <option value={wd} key={wd}>\n              {wd}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"RangeForm__fields\">\n        <button type=\"submit\">Save</button>\n      </div>\n    </form>\n  );\n};\n\nconst WEEK_DAYS = Info.weekdays();\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { DateTime } from \"luxon\";\nimport { RangeForm } from \"./components/RangeForm\";\n\nconst DAY_WIDTH = 16;\n\nconst createState = (start: string, end: string, accelerationDay: string) => {\n  const startDate = DateTime.fromISO(start);\n  if (!startDate.isValid) {\n    console.error(\"invalid startDate \" + start, startDate);\n    return;\n  }\n\n  const endDate = DateTime.fromISO(end);\n  if (!endDate.isValid) {\n    console.error(\"invalid endDate \" + start, endDate);\n    return;\n  }\n\n  const duration = endDate.diff(startDate, \"days\");\n\n  const days = Array.from({ length: duration.days }, (_, i) =>\n    startDate.plus({ days: i })\n  );\n\n  const firstAccelerationDayOffset = days.findIndex(\n    (d) => d.weekdayLong === accelerationDay\n  );\n\n  if (firstAccelerationDayOffset == null)\n    throw new Error(`Could not find a \"${accelerationDay}\" in 'days' array`);\n\n  const periods = Array.from(\n    { length: Math.floor(duration.days / 7) },\n    (_, i) => ({\n      index: i,\n      length: 7,\n    })\n  );\n\n  return {\n    startDate,\n    endDate,\n    days,\n    periods,\n    firstAccelerationDayOffset,\n  };\n};\n\nconst DEFAULT_START = \"2020-01-01\";\nconst DEFAULT_END = \"2020-02-15\";\nconst DEFAULT_ACCELERATION_DAY = \"Monday\";\n\ninterface ProlongedPeriods {\n  [date: number]: number;\n}\n\nfunction App() {\n  const [baseState, setBaseState] = useState(\n    createState(DEFAULT_START, DEFAULT_END, DEFAULT_ACCELERATION_DAY)\n  );\n  const [prolongedPeriods, setProlongedPeriods] = useState<ProlongedPeriods>(\n    {}\n  );\n  console.log(baseState);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <RangeForm\n          defaultValues={{\n            start: DEFAULT_START,\n            end: DEFAULT_END,\n            accelerationDay: DEFAULT_ACCELERATION_DAY,\n          }}\n          onSubmit={({ start, end, accelerationDay }) => {\n            setBaseState(() => createState(start, end, accelerationDay));\n            setProlongedPeriods({});\n          }}\n        ></RangeForm>\n      </header>\n      <div className=\"timeline\">\n        {baseState?.days.map((d) => (\n          <div\n            className={\"timeline__unit day day--\" + d.weekdayLong.toLowerCase()}\n            style={{ width: DAY_WIDTH }}\n            key={d.toMillis()}\n            title={d.toFormat(\"yyyy-MM-DD\")}\n          >\n            {d.weekdayShort.slice(0, 1)}\n          </div>\n        ))}\n      </div>\n      <div\n        className=\"timeline\"\n        style={{\n          paddingLeft: (baseState?.firstAccelerationDayOffset ?? 0) * DAY_WIDTH,\n        }}\n      >\n        {baseState?.periods.map((d) => (\n          <div\n            className=\"timeline__unit period\"\n            style={{\n              width: DAY_WIDTH * (prolongedPeriods[d.index] ?? d.length),\n            }}\n            key={d.index}\n          >\n            <button\n              onClick={() =>\n                setProlongedPeriods((s) => ({\n                  ...s,\n                  [d.index]: (s[d.index] ?? d.length) - 1,\n                }))\n              }\n            >\n              -\n            </button>\n            {d.index}\n            <button\n              onClick={() =>\n                setProlongedPeriods((s) => ({\n                  ...s,\n                  [d.index]: (s[d.index] ?? d.length) + 1,\n                }))\n              }\n            >\n              +\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}